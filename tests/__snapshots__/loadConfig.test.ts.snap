// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`errors on config is boolean 1`] = `"Config must be an object"`;

exports[`errors on config is number 1`] = `"Config must be an object"`;

exports[`errors on config is string 1`] = `"Config must be an object"`;

exports[`errors on config.types is number 1`] = `"Config.types must be an object"`;

exports[`errors on config.types[string] is [number] 1`] = `"Config.types[string][0] must be of type: string"`;

exports[`errors on config.types[string] is [string, number] 1`] = `"Config.types[string][1] must be of type: ?boolean"`;

exports[`errors on config.types[string] is number 1`] = `"Config.types[string] must be of type: string | [string] | [string, boolean]"`;

exports[`errors on config.vars is number 1`] = `"Config.vars must be an object"`;

exports[`errors on config.vars[string] is [number] 1`] = `"Config.vars[string][0] must be of type: string"`;

exports[`errors on config.vars[string] is [string, number] 1`] = `"Config.vars[string][1] must be of type: ?boolean"`;

exports[`errors on config.vars[string] is number 1`] = `"Config.vars[string] must be of type: string | [string] | [string, boolean]"`;

exports[`load from template multiline, empty config 1`] = `
Object {
  "types": Object {},
  "vars": Object {},
}
`;

exports[`load from template multiline, json config 1`] = `
Object {
  "types": Object {},
  "vars": Object {
    "gqf": Array [
      "_gqf",
      true,
    ],
  },
}
`;

exports[`load from template multiline, no config 1`] = `
Object {
  "types": Object {},
  "vars": Object {},
}
`;

exports[`load from template multiline, yaml config 1`] = `
Object {
  "types": Object {},
  "vars": Object {
    "gqf": Array [
      "_gqf",
      true,
    ],
  },
}
`;

exports[`load from template single line, empty config 1`] = `
Object {
  "types": Object {},
  "vars": Object {},
}
`;

exports[`load from template single line, no config 1`] = `
Object {
  "types": Object {},
  "vars": Object {},
}
`;
