// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
"class Author$id { private static _: any; static type = \\"Author\\"; static prop = \\"id\\"; }
class Author$name { private static _: any; static type = \\"Author\\"; static prop = \\"name\\"; }
class Author$books { private static _: any; static type = \\"Author\\"; static prop = \\"books\\"; }
class Author$favoriteBook { private static _: any; static type = \\"Author\\"; static prop = \\"favoriteBook\\"; }
class Author$rating { private static _: any; static type = \\"Author\\"; static prop = \\"rating\\"; }
class Book$id { private static _: any; static type = \\"Book\\"; static prop = \\"id\\"; }
class Book$author { private static _: any; static type = \\"Book\\"; static prop = \\"author\\"; }
class Book$title { private static _: any; static type = \\"Book\\"; static prop = \\"title\\"; }
class Book$description { private static _: any; static type = \\"Book\\"; static prop = \\"description\\"; }
class Book$categories { private static _: any; static type = \\"Book\\"; static prop = \\"categories\\"; }
class Book$reviews { private static _: any; static type = \\"Book\\"; static prop = \\"reviews\\"; }
class Book$rating { private static _: any; static type = \\"Book\\"; static prop = \\"rating\\"; }
class Review$id { private static _: any; static type = \\"Review\\"; static prop = \\"id\\"; }
class Review$rating { private static _: any; static type = \\"Review\\"; static prop = \\"rating\\"; }
class Review$book { private static _: any; static type = \\"Review\\"; static prop = \\"book\\"; }
class Review$user { private static _: any; static type = \\"Review\\"; static prop = \\"user\\"; }
class Review$title { private static _: any; static type = \\"Review\\"; static prop = \\"title\\"; }
class Review$details { private static _: any; static type = \\"Review\\"; static prop = \\"details\\"; }
class User$id { private static _: any; static type = \\"User\\"; static prop = \\"id\\"; }
class User$author { private static _: any; static type = \\"User\\"; static prop = \\"author\\"; }
class User$name { private static _: any; static type = \\"User\\"; static prop = \\"name\\"; }
class User$reviews { private static _: any; static type = \\"User\\"; static prop = \\"reviews\\"; }

type Author$ =
  | typeof Author$id
  | typeof Author$name
  | typeof Author$rating
  | $<typeof Author$books, Book$>
  | $<typeof Author$favoriteBook, Book$>

type Book$ =
  | typeof Book$categories
  | typeof Book$description
  | typeof Book$id
  | typeof Book$rating
  | typeof Book$title
  | $<typeof Book$author, Author$>
  | $<typeof Book$reviews, Review$>

type Review$ =
  | typeof Review$details
  | typeof Review$id
  | typeof Review$rating
  | typeof Review$title
  | $<typeof Review$book, Book$>
  | $<typeof Review$user, User$>

type User$ =
  | typeof User$id
  | typeof User$name
  | $<typeof User$author, Author$>
  | $<typeof User$reviews, Review$>


type $_ =
  | Author$
  | Book$
  | Review$
  | User$

const _Author = {
  id: Author$id,
  name: Author$name,
  rating: Author$rating,
};

const Author: typeof _Author & {
  books: $$MapWrap<typeof Book, typeof Author$books>,
  favoriteBook: $$MapWrap<typeof Book, typeof Author$favoriteBook>,
} = {
  ..._Author,
  books: $$mapWrap(() => Book, Author$books),
  favoriteBook: $$mapWrap(() => Book, Author$favoriteBook),
};

const _Book = {
  categories: Book$categories,
  description: Book$description,
  id: Book$id,
  rating: Book$rating,
  title: Book$title,
};

const Book: typeof _Book & {
  author: $$MapWrap<typeof Author, typeof Book$author>,
  reviews: $$MapWrap<typeof Review, typeof Book$reviews>,
} = {
  ..._Book,
  author: $$mapWrap(() => Author, Book$author),
  reviews: $$mapWrap(() => Review, Book$reviews),
};

const _Review = {
  details: Review$details,
  id: Review$id,
  rating: Review$rating,
  title: Review$title,
};

const Review: typeof _Review & {
  book: $$MapWrap<typeof Book, typeof Review$book>,
  user: $$MapWrap<typeof User, typeof Review$user>,
} = {
  ..._Review,
  book: $$mapWrap(() => Book, Review$book),
  user: $$mapWrap(() => User, Review$user),
};

const _User = {
  id: User$id,
  name: User$name,
};

const User: typeof _User & {
  author: $$MapWrap<typeof Author, typeof User$author>,
  reviews: $$MapWrap<typeof Review, typeof User$reviews>,
} = {
  ..._User,
  author: $$mapWrap(() => Author, User$author),
  reviews: $$mapWrap(() => Review, User$reviews),
};

type _$Author<F extends Author$> =
  & (typeof Author$id extends F ? { id: ID } : {})
  & (typeof Author$name extends F ? { name: String } : {})
  & (typeof Author$rating extends F ? { rating: StarRating } : {})
  & ($<typeof Author$books, any> extends F ? { books: _$Book<Extract<F, $<typeof Author$books, Book$>>[\\"l\\"]>[] } : {})
  & ($<typeof Author$favoriteBook, any> extends F ? { favoriteBook: _$Book<Extract<F, $<typeof Author$favoriteBook, Book$>>[\\"l\\"]> } : {})
type $Author<F extends Author$[]> = _$Author<F[number]>;

type _$Book<F extends Book$> =
  & (typeof Book$categories extends F ? { categories: Category[] } : {})
  & (typeof Book$description extends F ? { description: String } : {})
  & (typeof Book$id extends F ? { id: ID } : {})
  & (typeof Book$rating extends F ? { rating: StarRating } : {})
  & (typeof Book$title extends F ? { title: String } : {})
  & ($<typeof Book$author, any> extends F ? { author: _$Author<Extract<F, $<typeof Book$author, Author$>>[\\"l\\"]> } : {})
  & ($<typeof Book$reviews, any> extends F ? { reviews: _$Review<Extract<F, $<typeof Book$reviews, Review$>>[\\"l\\"]>[] } : {})
type $Book<F extends Book$[]> = _$Book<F[number]>;

type _$Review<F extends Review$> =
  & (typeof Review$details extends F ? { details: (String | null) } : {})
  & (typeof Review$id extends F ? { id: ID } : {})
  & (typeof Review$rating extends F ? { rating: StarRating } : {})
  & (typeof Review$title extends F ? { title: (String | null) } : {})
  & ($<typeof Review$book, any> extends F ? { book: _$Book<Extract<F, $<typeof Review$book, Book$>>[\\"l\\"]> } : {})
  & ($<typeof Review$user, any> extends F ? { user: _$User<Extract<F, $<typeof Review$user, User$>>[\\"l\\"]> } : {})
type $Review<F extends Review$[]> = _$Review<F[number]>;

type _$User<F extends User$> =
  & (typeof User$id extends F ? { id: ID } : {})
  & (typeof User$name extends F ? { name: String } : {})
  & ($<typeof User$author, any> extends F ? { author: (_$Author<Extract<F, $<typeof User$author, Author$>>[\\"l\\"]> | null) } : {})
  & ($<typeof User$reviews, any> extends F ? { reviews: _$Review<Extract<F, $<typeof User$reviews, Review$>>[\\"l\\"]>[] } : {})
type $User<F extends User$[]> = _$User<F[number]>;"
`;
