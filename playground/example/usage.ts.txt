// @ts-nocheck
// -----

// Example Typescript Usage File

// Below are examples of a user-created Typescript code that uses the type information generated by gqx

// You can edit this TypeScript file.


import { gqx, Book, Person, Author, User } from "./gqx";

const bookFrag = Book.$(
  Book.id,
  Book.title,
  Book.author.name,
);

const authorFrag = Author.$(
  Author.id,
  Author.name,
);

const bookAuthorFrag = Book.$(
  Book.id,
  Book.author.$(authorFrag)
);

const bookQueryFrag = Book.$(
  bookFrag,
  bookAuthorFrag,
);

// Hover over the result to see the type
const bookResult = await gqx.query.getBook({ id: "abc" }, bookQueryFrag)

bookResult.author.name // string


// Person is implemented by Author & User
const peopleQueryFrag  = Person.$(
  Person.name,
  Author.books.id, // Author implements
  User.username,
)

// Hover over the result to see the type
const peopleResult = await gqx.query.getPeople({ filter: "A" }, peopleQueryFrag)

for(const person of peopleResult) {
  switch(person.__typename) {
    case "Author": // has books
      person.books.length
      continue;
    case "User": // has username
      person.username.toLowerCase()
      continue;
  }
}
